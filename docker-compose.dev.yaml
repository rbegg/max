name: ${COMPOSE_PROJECT_NAME:-max-dev}
services:
  # -------------------------------------------------------------------------------------
  # web-server SERVICE
  # -------------------------------------------------------------------------------------
  web-server:
    image: web-server-dev
    build:
      target: dev
      # Context & Dockerfile is set to services/web-server in docker-compose.yaml
    volumes:
      # Bind-mount source code for live-reloading
      - ./services/web-server/src:/app/src
      - ./services/web-server/static:/app/static
      - ./services/web-server/requirements.txt:/app/requirements.txt
      # Use a named volume for node_modules for performance
      - node_modules:/app/node_modules
    # command: ["python3", "src/main.py"] # Command to run the dev server
    command: ["python", "-m", "uvicorn", "src.main:app","--reload"]

  # -------------------------------------------------------------------------------------
  # stt SERVICE
  # -------------------------------------------------------------------------------------
  stt:
    image: stt-dev
    build:
      target: dev
      # Context & Dockerfile is set to services/max-stt in docker-compose.yaml
    volumes:
      # Bind-Mount local directories into the container for live code changes.
      - ./services/max-stt:/app
      #- ./tests:/app/tests
      #- ./data:/app/data
    # This keeps the container running so IDE can attach
    # command: sleep infinity
    command: ["python", "-m", "uvicorn", "src.app:app","--reload"]

  # -------------------------------------------------------------------------------------
  # ASSISTANT SERVICE
  # -------------------------------------------------------------------------------------
  assistant:
    image: assistant-dev
    build:
      target: dev
      # Context & Dockerfile is set to services/max-assistant in docker-compose.yaml
    volumes:
      # Bind-Mount local directories into the container for live code changes.
      - ./services/max-assistant:/app
    command: ["python", "-m", "uvicorn", "src.main:app","--reload"]

  # -------------------------------------------------------------------------------------
  # ollama SERVICE
  # -------------------------------------------------------------------------------------
  ollama:
    # Same container in Dev & Prod

  # -------------------------------------------------------------------------------------
  # proxy SERVICE
  # -------------------------------------------------------------------------------------
  proxy:
    ports:
      - "${PROXY_HTTP_PORT:-8080}:80"
      - "${PROXY_HTTPS_PORT:-8443}:443"
    volumes:
       # mount a replacement nginx.cong to set workers to 1
      - ./proxy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # 1. Mount the template to the correct directory
      - ./proxy/nginx/dev.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./proxy/certs:/etc/nginx/certs:ro

  # -------------------------------------------------------------------------------------
  # VOLUMES
  # -------------------------------------------------------------------------------------
# Define the named volume for the virtual environment
volumes:
  venv:
  # Define the named volume for node modules
  node_modules:
