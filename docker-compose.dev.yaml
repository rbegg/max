name: ${COMPOSE_PROJECT_NAME:-max-dev}
services:
  stt:
    image: stt-dev
    build:
      target: dev
      # Context is set to services/max-stt in docker-compose.yaml
      dockerfile: Dockerfile
    volumes:
      # Bind-Mount local directories into the container for live code changes.
      - ./services/max-stt:/app
      # Use a named volume to persist the venv and protect it from the workspace mount (pycharm).
      - venv:/app/.venv
      #- ./tests:/app/tests
      #- ./data:/app/data
      # 2. Use a named volume for node_modules for performance
      #  node-modules:/workspaces/my-project/node_modules
    #ports:
      # Expose a port for a web-server server, API, etc  host:container
    #  - "8765:8765"
    # recommended to not use restart for dev
    # restart: unless-stopped

    user: appuser
    # Override the Dockerfile's CMD for development
    # This keeps the container running so IDE can attach
    #command: sleep infinity
    command: ["python", "-m", "src.app"]

  proxy:
    ports:
      - "${PROXY_HTTP_PORT:-8080}:80"
      - "${PROXY_HTTPS_PORT:-8443}:443"
    volumes:
      # 1. Mount the template to the correct directory
      - ./proxy/nginx/dev.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./proxy/certs:/etc/nginx/certs:ro


  ollama:
    ports:
    - "11434:11434"
    # Define the named volume for the virtual environment
volumes:
  venv:
